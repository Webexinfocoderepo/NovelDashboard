{"ast":null,"code":"const API_BASE_URL = 'http://localhost:5050';\n\n// API service for visitor tracking\nexport const apiService = {\n  // Get all visitors\n  async getVisitors() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/visitors`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visitors');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching visitors:', error);\n      throw error;\n    }\n  },\n  // Track visitor activity\n  async trackVisitor(projectId, userId, action) {\n    try {\n      const response = await fetch(`${API_BASE_URL}/track?pid=${projectId}&uid=${userId}&action=${action}`);\n      if (!response.ok) {\n        throw new Error('Failed to track visitor');\n      }\n      return await response.text();\n    } catch (error) {\n      console.error('Error tracking visitor:', error);\n      throw error;\n    }\n  },\n  // Get visitor statistics\n  async getVisitorStats() {\n    try {\n      const visitors = await this.getVisitors();\n      const stats = {\n        total: visitors.length,\n        byStatus: {},\n        byProject: {},\n        recentActivity: visitors.slice(0, 10) // Last 10 activities\n      };\n\n      // Group by status\n      visitors.forEach(visitor => {\n        stats.byStatus[visitor.status] = (stats.byStatus[visitor.status] || 0) + 1;\n        stats.byProject[visitor.projectId] = (stats.byProject[visitor.projectId] || 0) + 1;\n      });\n      return stats;\n    } catch (error) {\n      console.error('Error getting visitor stats:', error);\n      throw error;\n    }\n  }\n};","map":{"version":3,"names":["API_BASE_URL","apiService","getVisitors","response","fetch","ok","Error","json","error","console","trackVisitor","projectId","userId","action","text","getVisitorStats","visitors","stats","total","length","byStatus","byProject","recentActivity","slice","forEach","visitor","status"],"sources":["/Users/parangat/Desktop/A-project/src/services/api.js"],"sourcesContent":["const API_BASE_URL = 'http://localhost:5050';\n\n// API service for visitor tracking\nexport const apiService = {\n  // Get all visitors\n  async getVisitors() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/visitors`);\n      if (!response.ok) {\n        throw new Error('Failed to fetch visitors');\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching visitors:', error);\n      throw error;\n    }\n  },\n\n  // Track visitor activity\n  async trackVisitor(projectId, userId, action) {\n    try {\n      const response = await fetch(\n        `${API_BASE_URL}/track?pid=${projectId}&uid=${userId}&action=${action}`\n      );\n      if (!response.ok) {\n        throw new Error('Failed to track visitor');\n      }\n      return await response.text();\n    } catch (error) {\n      console.error('Error tracking visitor:', error);\n      throw error;\n    }\n  },\n\n  // Get visitor statistics\n  async getVisitorStats() {\n    try {\n      const visitors = await this.getVisitors();\n      \n      const stats = {\n        total: visitors.length,\n        byStatus: {},\n        byProject: {},\n        recentActivity: visitors.slice(0, 10) // Last 10 activities\n      };\n\n      // Group by status\n      visitors.forEach(visitor => {\n        stats.byStatus[visitor.status] = (stats.byStatus[visitor.status] || 0) + 1;\n        stats.byProject[visitor.projectId] = (stats.byProject[visitor.projectId] || 0) + 1;\n      });\n\n      return stats;\n    } catch (error) {\n      console.error('Error getting visitor stats:', error);\n      throw error;\n    }\n  }\n}; "],"mappings":"AAAA,MAAMA,YAAY,GAAG,uBAAuB;;AAE5C;AACA,OAAO,MAAMC,UAAU,GAAG;EACxB;EACA,MAAMC,WAAWA,CAAA,EAAG;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGJ,YAAY,WAAW,CAAC;MACxD,IAAI,CAACG,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,0BAA0B,CAAC;MAC7C;MACA,OAAO,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChD,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAME,YAAYA,CAACC,SAAS,EAAEC,MAAM,EAAEC,MAAM,EAAE;IAC5C,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMC,KAAK,CAC1B,GAAGJ,YAAY,cAAcW,SAAS,QAAQC,MAAM,WAAWC,MAAM,EACvE,CAAC;MACD,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,yBAAyB,CAAC;MAC5C;MACA,OAAO,MAAMH,QAAQ,CAACW,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C,MAAMA,KAAK;IACb;EACF,CAAC;EAED;EACA,MAAMO,eAAeA,CAAA,EAAG;IACtB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAM,IAAI,CAACd,WAAW,CAAC,CAAC;MAEzC,MAAMe,KAAK,GAAG;QACZC,KAAK,EAAEF,QAAQ,CAACG,MAAM;QACtBC,QAAQ,EAAE,CAAC,CAAC;QACZC,SAAS,EAAE,CAAC,CAAC;QACbC,cAAc,EAAEN,QAAQ,CAACO,KAAK,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC;MACxC,CAAC;;MAED;MACAP,QAAQ,CAACQ,OAAO,CAACC,OAAO,IAAI;QAC1BR,KAAK,CAACG,QAAQ,CAACK,OAAO,CAACC,MAAM,CAAC,GAAG,CAACT,KAAK,CAACG,QAAQ,CAACK,OAAO,CAACC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC;QAC1ET,KAAK,CAACI,SAAS,CAACI,OAAO,CAACd,SAAS,CAAC,GAAG,CAACM,KAAK,CAACI,SAAS,CAACI,OAAO,CAACd,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC;MACpF,CAAC,CAAC;MAEF,OAAOM,KAAK;IACd,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACpD,MAAMA,KAAK;IACb;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}